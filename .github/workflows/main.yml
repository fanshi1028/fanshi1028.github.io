name: Build and deploy

on:
  push:
    branches: main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-wasm-feature-detect:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31

      - uses: cachix/cachix-action@v16
        with:
          name: fanshi1028-personal
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Nix Build wasm-feature-detect
        run: |
          nix build .#wasm-feature-detect

      - uses: actions/upload-artifact@v4
        with:
          name: wasm-feature-detect
          path: result/lib/node_modules/wasm-feature-detect
          if-no-files-found: error
          retention-days: 1

  build-browser_wasi_shim:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31

      - uses: cachix/cachix-action@v16
        with:
          name: fanshi1028-personal
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Nix Build browser_wasi_shim
        run: |
          nix build .#browser_wasi_shim

      - uses: actions/upload-artifact@v4
        with:
          name: browser_wasi_shim
          path: result/lib/node_modules/@bjorn3/browser_wasi_shim
          if-no-files-found: error
          retention-days: 1

  build-css:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31

      - uses: cachix/cachix-action@v16
        with:
          name: fanshi1028-personal
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: TailwindCSS
        shell: nix shell .#tailwindcss --command bash -e {0}
        run: |
          tailwindcss -m -i static/input.css -o output.css

      - uses: actions/upload-artifact@v4
        with:
          name: css
          path: ./output.css
          if-no-files-found: error
          retention-days: 1

  prerender:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31

      - uses: cachix/cachix-action@v16
        with:
          name: fanshi1028-personal
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Prerender using nix
        run: |
          nix run .#prerender

      - uses: actions/upload-artifact@v4
        with:
          name: prerender
          path: ./*.html
          if-no-files-found: error
          retention-days: 1

  build-site-js:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31

      - uses: cachix/cachix-action@v16
        with:
          name: fanshi1028-personal
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Nix Build fanshi1028-site-js
        run: |
          nix build .#fanshi1028-site-js

      - name: Optimise JS
        shell: nix shell .#closurecompiler --command bash -e {0}
        # NOTE: https://discourse.haskell.org/t/ghc-js-backend-improve-compiled-size/12098/17
        # NOTE: https://github.com/ghcjs/ghcjs/wiki/Deployment
        run: |
          closure-compiler --language_in UNSTABLE --compilation_level SIMPLE_OPTIMIZATIONS --warning_level QUIET \
            --isolation_mode IIFE --assume_function_wrapper --emit_use_strict \
            --externs=result/bin/fanshi1028-site.jsexe/all.externs.js \
            result/bin/fanshi1028-site.jsexe/all.js \
            > all.js

      - uses: actions/upload-artifact@v4
        with:
          name: fanshi1028-site-js
          path: all.js
          if-no-files-found: error
          retention-days: 1

  build-site-wasm:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: nix develop .#wasm --command bash -e {0}

    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v31

      - uses: cachix/cachix-action@v16
        with:
          name: fanshi1028-personal
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: haskell-miso-cachix

      - name: Cache cabal stuff
        uses: actions/cache@v4
        with:
          path: |
            ~/.ghc-wasm/.cabal/packages
            ~/.ghc-wasm/.cabal/store
            dist-newstyle
          key: cabal-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock', '**/*.cabal', '**/wasm.cabal.project') }}
          restore-keys: cabal-${{ runner.os }}-

      - name: Nix Develop (WASM) Cabal Build fanshi1028-site
        run: |
          wasm32-wasi-cabal --project-file=wasm.cabal.project configure
          wasm32-wasi-cabal --project-file=wasm.cabal.project build fanshi1028-site:exe:fanshi1028-site

      - name: find wasmArtifactPath
        run: |
          echo "wasmArtifactPath=$(wasm32-wasi-cabal --project-file=wasm.cabal.project list-bin exe:fanshi1028-site | tail -n 1)" >> $GITHUB_ENV

      - name: find ghcLibPath
        run: |
          echo "ghcLibPath=$(wasm32-wasi-ghc --print-libdir)" >> $GITHUB_ENV

      - name: Link
        run: |
          ${{env.ghcLibPath}}/post-link.mjs --input ${{env.wasmArtifactPath}} --output ghc_wasm_jsffi.js

      - name: Optimise wasm
        run: |
          wasm-opt -all -O2 ${{env.wasmArtifactPath}} -o fanshi1028-site.wasm
          wasm-tools strip -o fanshi1028-site.wasm fanshi1028-site.wasm

      - uses: actions/upload-artifact@v4
        with:
          name: fanshi1028-site-wasm
          path: |
            fanshi1028-site.wasm
            ghc_wasm_jsffi.js
          if-no-files-found: error
          retention-days: 1

  build:
    runs-on: ubuntu-latest
    needs:
      [
        build-wasm-feature-detect,
        build-browser_wasi_shim,
        prerender,
        build-site-js,
      ]

    steps:
      - uses: actions/checkout@v4

      # - uses: actions/download-artifact@v5
      #   with:
      #     name: fanshi1028-site-wasm
      #     path: public

      - uses: actions/download-artifact@v5
        with:
          name: fanshi1028-site-js
          path: public

      - uses: actions/download-artifact@v5
        with:
          name: prerender
          path: public

      - uses: actions/download-artifact@v5
        with:
          name: wasm-feature-detect
          path: public/wasm-feature-detect

      - uses: actions/download-artifact@v5
        with:
          name: browser_wasi_shim
          path: public/browser_wasi_shim

      - uses: actions/download-artifact@v5
        with:
          name: css
          path: public

      - name: Prepare some static files
        run: |
          cp -v static/index.js public/
          cp -v static/favicon.ico public/

      - name: Archive artifact
        shell: sh
        run: |
          echo ::group::Archive artifact
          tar \
            --dereference --hard-dereference \
            --directory ./public \
            -cvf "$RUNNER_TEMP/artifact.tar" \
            --exclude=.git \
            --exclude=.github \
            --exclude=".[^/]*" \
            .
          du -h $RUNNER_TEMP/artifact.tar
          echo ::endgroup::

      - name: Upload artifact
        id: upload-artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: 'github-pages'
          path: ${{ runner.temp }}/artifact.tar
          retention-days: '1'
          if-no-files-found: error

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
